/* Import Inter font */
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');

/* Basic reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --bg-color: rgb(250 248 255);
    --text-color:  rgb(26 27 33);
    --border-color: rgb(117 118 128);
    --hover-bg: rgb(232 231 239);
    --active-bg: rgb(238 237 244);
    --sidebar-border: rgb(227 226 233);
    --accent: rgb(74 92 146);
    --visited-accent: rgb(88 94 113);
    --sidebar-padding: 20px;
    --transition-speed: 0.3s;
    --border-width: 2px;
    --hover-border-width: 4px;
    --hover-border-color: rgb(74 92 146);
    --corner-cut: 20px;
    --container-corner-cut: 20px;
    --menu-bar-corner-cut: 1.5px; /* New variable for menu bar corner cuts */
    --scroll-height: 80px; /* Height of all scrolling items combined */
    --item-height: 35px; /* Height of each text item */
    --name-box-height: 70px; /* Increased height for name box */
    --mobile-item-height: 20px; /* Height for mobile text items */
}

@media (prefers-color-scheme: dark) {
    :root {
        --bg-color: rgb(18 19 24);
        --text-color: rgb(227 226 233);
        --border-color: rgb(143 144 154);
        --hover-bg:  rgb(41 42 47);
        --active-bg:  rgb(30 31 37);
        --sidebar-border: rgb(69 70 79);
        --accent: rgb(179 197 255);
        --accent-visited: rgb(193 198 221);
        --hover-border-color: rgb(179 197 255);
        --accent: rgb(179 197 255);
    }
}

/* Base font styles */
body {
    font-family: "Inter", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
    line-height: 1.6;
    background-color: var(--bg-color);
    color: var(--text-color);
}

/* Disable tab transitions initially */
.no-tab-transition .tab-button,
.no-tab-transition .tab-content,
.no-tab-transition .tab-button::before,
.no-tab-transition .tab-button::after {
    transition: none !important;
}

/* Heading styles */
h1, h2, h3, h4, h5, h6 {
    font-family: "Inter", sans-serif;
    font-optical-sizing: auto;
    font-weight: 700;
    font-style: normal;
    position: relative;
    transition: color 0.3s ease;
}

h1 {
    margin-bottom: 40px;
    font-size: 2.5rem;
}

h2 {
    margin-bottom: 30px;
    font-size: 2.1rem;
}

h3 {
    margin-bottom: 25px;
    font-size: 1.8rem;
}

h4 {
    margin-bottom: 20px;
    font-size: 1.5rem;
}

h5 {
    margin-bottom: 15px;
    font-size: 1.3rem;
}

h6 {
    margin-bottom: 10px;
    font-size: 1.1rem;
}

h1::after, h2::after, h3::after, h4::after, h5::after, h6::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 0;
    height: 4px;
    background-color: var(--accent);
    transition: width 0.3s ease;
}

h1::after { width: 120px; }
h2::after { width: 100px; }
h3::after { width: 80px; }
h4::after { width: 60px; }
h5::after { width: 40px; }
h6::after { width: 30px; }

h1:hover, h2:hover, h3:hover, h4:hover, h5:hover, h6:hover {
    color: var(--accent);
}

h1:hover::after { width: 180px; }
h2:hover::after { width: 150px; }
h3:hover::after { width: 120px; }
h4:hover::after { width: 90px; }
h5:hover::after { width: 60px; }
h6:hover::after { width: 45px; }

/* Button text */
.tab-button {
    font-family: "Inter", sans-serif;
    font-optical-sizing: auto;
    font-weight: 500;
    font-style: normal;
}

/* Scrolling text items */
.text-item {
    height: var(--item-height);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.75rem;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    font-weight: 600;
    color: var(--text-color);
    white-space: nowrap; /* Prevent text wrapping */
    padding: 0 20px; /* Add some padding to prevent text from touching edges */
}

@keyframes scrollText {
    0% {
        transform: translateY(calc(var(--item-height) * -1));
    }
    100% {
        transform: translateY(calc(var(--item-height) * -3)); /* Scroll through both names */
    }
}

/* Mobile text items */
.text-item-mobile {
    height: var(--mobile-item-height);
    display: flex;
    align-items: center;
    justify-content: flex-start;
    font-size: 1rem;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    font-weight: 600;
    color: var(--text-color);
}

@keyframes scrollTextMobile {
    0% {
        transform: translateY(calc(var(--mobile-item-height) * -1));
    }
    100% {
        transform: translateY(calc(var(--mobile-item-height) * -3)); /* Scroll through both names */
    }
}

/* Mobile header - hidden by default on desktop */
.mobile-header {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    padding: 10px 20px;
    background-color: var(--bg-color);
    border-bottom: 1px solid var(--sidebar-border);
    z-index: 100;
    justify-content: space-between;
    align-items: center;
}

.name-box-mobile {
    font-size: 0.8em;
    position: relative;
    height: 40px;
    overflow: hidden;
    width: 170px;
}

/* Mobile scrolling container */
.scroll-container-mobile {
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: relative;
}

/* Gradient overlay for mobile fade effects */
.scroll-container-mobile::before,
.scroll-container-mobile::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    height: 30%;
    z-index: 2;
    pointer-events: none;
}

.scroll-container-mobile::before {
    top: 0;
    background: linear-gradient(to bottom, var(--bg-color) 10%, transparent 110%);
}

.scroll-container-mobile::after {
    bottom: 0;
    background: linear-gradient(to top, var(--bg-color) 10%, transparent 110%);
}

.scroll-wrapper-mobile {
    position: absolute;
    left: 0;
    width: 100%;
    animation: scrollTextMobile 8s linear infinite;
    will-change: transform;
    backface-visibility: hidden;
    padding: 10px 0;
}

.menu-toggle {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    width: 30px;
    height: 25px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
}

.bar {
    width: 100%;
    height: 3px;
    background-color: var(--text-color);
    transition: var(--transition-speed);
    /* Hexagonal shape using clip-path with smaller corner cuts */
    clip-path: polygon(var(--menu-bar-corner-cut) 0%, calc(100% - var(--menu-bar-corner-cut)) 0%, 100% 50%, calc(100% - var(--menu-bar-corner-cut)) 100%, var(--menu-bar-corner-cut) 100%, 0% 50%);
}

/* Adjust the rotation animation to work with hexagonal bars */
.menu-toggle.active .bar:nth-child(1) {
    transform: translateY(11px) rotate(45deg);
    clip-path: polygon(var(--menu-bar-corner-cut) 0%, calc(100% - var(--menu-bar-corner-cut)) 0%, 100% 50%, calc(100% - var(--menu-bar-corner-cut)) 100%, var(--menu-bar-corner-cut) 100%, 0% 50%);
}

.menu-toggle.active .bar:nth-child(2) {
    opacity: 0;
}

.menu-toggle.active .bar:nth-child(3) {
    transform: translateY(-11px) rotate(-45deg);
    clip-path: polygon(var(--menu-bar-corner-cut) 0%, calc(100% - var(--menu-bar-corner-cut)) 0%, 100% 50%, calc(100% - var(--menu-bar-corner-cut)) 100%, var(--menu-bar-corner-cut) 100%, 0% 50%);
}

.container {
    display: flex;
    height: 100vh;
}

/* Sidebar styles */
.sidebar {
    width: fit-content;
    min-width: 200px;
    padding: var(--sidebar-padding);
    border-right: var(--border-width) solid var(--sidebar-border);
    display: flex;
    flex-direction: column;
    gap: 15px;
    background-color: var(--bg-color);
    align-items: center; /* Center the name box */
}

.name-box {
    position: relative;
    border: none;
    padding: 0;
    text-align: center;
    background-color: var(--border-color);
    /* Octagonal shape using clip-path */
    clip-path: polygon(
        var(--container-corner-cut) 0%, 
        calc(100% - var(--container-corner-cut)) 0%, 
        100% var(--container-corner-cut), 
        100% calc(100% - var(--container-corner-cut)), 
        calc(100% - var(--container-corner-cut)) 100%, 
        var(--container-corner-cut) 100%, 
        0% calc(100% - var(--container-corner-cut)), 
        0% var(--container-corner-cut)
    );
    height: var(--name-box-height);
    overflow: hidden;
    width: fit-content;
    min-width: 325px; /* Increased minimum width to accommodate longer text */
    margin-left: auto;
    margin-right: auto;
}

/* Pseudo-element for border effect */
.name-box::before {
    content: '';
    position: absolute;
    top: var(--border-width);
    left: var(--border-width);
    right: var(--border-width);
    bottom: var(--border-width);
    background-color: var(--bg-color);
    z-index: -1;
    /* Calculate inset octagonal shape */
    clip-path: polygon(
        calc(var(--container-corner-cut) - var(--border-width) * 0.5) 0%, 
        calc(100% - var(--container-corner-cut) + var(--border-width) * 0.5) 0%, 
        100% calc(var(--container-corner-cut) - var(--border-width) * 0.5), 
        100% calc(100% - var(--container-corner-cut) + var(--border-width) * 0.5), 
        calc(100% - var(--container-corner-cut) + var(--border-width) * 0.5) 100%, 
        calc(var(--container-corner-cut) - var(--border-width) * 0.5) 100%, 
        0% calc(100% - var(--container-corner-cut) + var(--border-width) * 0.5), 
        0% calc(var(--container-corner-cut) - var(--border-width) * 0.5)
    );
}

/* Scrolling text container */
.scroll-container {
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: relative;
    z-index: 1;
    padding: 0;
}

/* Gradient overlay for fade effects */
.scroll-container::before,
.scroll-container::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    height: var(--container-corner-cut);
    z-index: 2;
    pointer-events: none;
}

.scroll-container::before {
    top: 0;
    background: linear-gradient(to bottom, var(--bg-color) 10%, transparent 110%);
}

.scroll-container::after {
    bottom: 0;
    background: linear-gradient(to top, var(--bg-color) 10%, transparent 110%);
}

.scroll-wrapper {
    position: absolute;
    left: 0;
    width: 100%;
    animation: scrollText 8s linear infinite;
    will-change: transform;
    backface-visibility: hidden;
    padding: 30px 0;
}

.tabs {
    display: flex;
    flex-direction: column;
    gap: 15px;
    width: 100%; /* Make tabs container full width */
}

.tab-button {
    position: relative;
    display: inline-block;
    padding: 10px 30px;
    background: none;
    cursor: pointer;
    font-size: 16px;
    transition: background-color var(--transition-speed), transform var(--transition-speed);
    color: var(--text-color);
    text-align: center;
    /* Hexagonal shape using clip-path */
    clip-path: polygon(var(--corner-cut) 0%, calc(100% - var(--corner-cut)) 0%, 100% 50%, calc(100% - var(--corner-cut)) 100%, var(--corner-cut) 100%, 0% 50%);
    border: none;
    z-index: 1;
    /* Add consistent height to ensure proper alignment */
    height: 42px;
    line-height: 22px;
    background-color: var(--border-color);
    transition: background-color var(--transition-speed);
    width: 100%; /* Make button take full width */
    box-sizing: border-box; /* Ensure padding is included in width */
}

/* Pseudo-element for border effect with rounded corners */
.tab-button::before {
    content: '';
    position: absolute;
    top: var(--border-width);
    left: var(--border-width);
    right: var(--border-width);
    bottom: var(--border-width);
    background-color: var(--bg-color);
    z-index: -1;
    /* Calculate inset hexagonal shape */
    clip-path: polygon(
        calc(var(--corner-cut) - var(--border-width) * 0.5) 0%, 
        calc(100% - var(--corner-cut) + var(--border-width) * 0.5) 0%, 
        calc(100% - var(--border-width) * 0.5) 50%, 
        calc(100% - var(--corner-cut) + var(--border-width) * 0.5) 100%, 
        calc(var(--corner-cut) - var(--border-width) * 0.5) 100%, 
        calc(var(--border-width) * 0.5) 50%
    );
    transition: all var(--transition-speed);
}

/* Button gradient overlays */
.tab-button::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 2;
    pointer-events: none;
    transition: opacity var(--transition-speed);
    opacity: 1;
    /* Hexagonal shape using clip-path */
    clip-path: polygon(var(--corner-cut) 0%, calc(100% - var(--corner-cut)) 0%, 100% 50%, calc(100% - var(--corner-cut)) 100%, var(--corner-cut) 100%, 0% 50%);
    /* Gradient overlay, radiating from center */
    background: radial-gradient(
        circle at center,
        transparent 60%,
        var(--bg-color) 120%
    );
}

.tab-button:hover, .tab-button.active {
    background-color: var(--hover-border-color);
}

/* Hide gradient on hover/active */
.tab-button:hover::after, .tab-button.active::after {
    opacity: 0;
}

.tab-button.active::before {
    background-color: var(--active-bg);
}

.tab-button:hover::before {
    background-color: var(--hover-bg);
    top: var(--hover-border-width);
    left: var(--hover-border-width);
    right: var(--hover-border-width);
    bottom: var(--hover-border-width);
    /* Recalculate inset hexagonal shape for thicker border */
    clip-path: polygon(
        calc(var(--corner-cut) - var(--hover-border-width) * 0.5) 0%, 
        calc(100% - var(--corner-cut) + var(--hover-border-width) * 0.5) 0%, 
        calc(100% - var(--hover-border-width) * 0.5) 50%, 
        calc(100% - var(--corner-cut) + var(--hover-border-width) * 0.5) 100%, 
        calc(var(--corner-cut) - var(--hover-border-width) * 0.5) 100%, 
        calc(var(--hover-border-width) * 0.5) 50%
    );
}

/* Content area */
.content {
    flex: 1;
    position: relative;
    margin: 20px;
    border: none;
    background-color: var(--border-color);
    /* Octagonal shape using clip-path */
    clip-path: polygon(
        var(--container-corner-cut) 0%, 
        calc(100% - var(--container-corner-cut)) 0%, 
        100% var(--container-corner-cut), 
        100% calc(100% - var(--container-corner-cut)), 
        calc(100% - var(--container-corner-cut)) 100%, 
        var(--container-corner-cut) 100%, 
        0% calc(100% - var(--container-corner-cut)), 
        0% var(--container-corner-cut)
    );
    min-width: 0; /* Prevent flex item from overflowing */
}

/* Gradient overlay for content container top */
.content::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    height: var(--container-corner-cut);
    background: linear-gradient(to bottom, var(--bg-color) 10%, transparent 110%);
    z-index: 1;
    pointer-events: none;
}

hr {
    color: var(--sidebar-border);
    margin: 30px 0;
}

/* Inner background with border effect */
.content::before {
    content: '';
    position: absolute;
    top: var(--border-width);
    left: var(--border-width);
    right: var(--border-width);
    bottom: var(--border-width);
    background-color: var(--bg-color);
    z-index: -1;
    /* Calculate inset octagonal shape */
    clip-path: polygon(
        calc(var(--container-corner-cut) - var(--border-width) * 0.5) 0%, 
        calc(100% - var(--container-corner-cut) + var(--border-width) * 0.5) 0%, 
        100% calc(var(--container-corner-cut) - var(--border-width) * 0.5), 
        100% calc(100% - var(--container-corner-cut) + var(--border-width) * 0.5), 
        calc(100% - var(--container-corner-cut) + var(--border-width) * 0.5) 100%, 
        calc(var(--container-corner-cut) - var(--border-width) * 0.5) 100%, 
        0% calc(100% - var(--container-corner-cut) + var(--border-width) * 0.5), 
        0% calc(var(--container-corner-cut) - var(--border-width) * 0.5)
    );
}

/* Bottom gradient overlay for content */
.content-fade-bottom {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    height: calc(var(--container-corner-cut));
    background: linear-gradient(to top, var(--bg-color) 10%, transparent 110%);
    z-index: 1;
    pointer-events: none;
}

/* Make content appear above the pseudo-element but below the gradients */
.tab-content {
    position: relative;
    z-index: 0;
    display: none;
    padding: calc(var(--container-corner-cut)) calc(var(--container-corner-cut) * 2);
    /* Add height and overflow for scrolling */
    height: calc(100% + var(--container-corner-cut));
    overflow-y: auto;
    /* Eliminate scrollbar */
    scrollbar-width: none;
    -ms-overflow-style: none;
}

.tab-content::-webkit-scrollbar {
    display: none;
}

.tab-content.active {
    display: block;
}

a {
    color: var(--accent);
}

a:visited {
    color: var(--visited-accent);
}

h2 {
    margin-bottom: 10px;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    body {
        padding-top: 60px; /* Make room for fixed header */
    }
    
    .mobile-header {
        display: flex;
    }
    
    h1, h2, h3, h4, h5, h6 {
        text-align: center;
    }
    
    h1 {
        font-size: 2rem;
    }
    
    h2 {
        font-size: 1.8rem;
    }
    
    h3 {
        font-size: 1.6rem;
    }
    
    h4 {
        font-size: 1.4rem;
    }
    
    h5 {
        font-size: 1.2rem;
    }
    
    h6 {
        font-size: 1rem;
    }
    
    h1::after, h2::after, h3::after, h4::after, h5::after, h6::after {
        left: 50%;
        transform: translateX(-50%);
    }
    
    .container {
        flex-direction: column;
    }
    
    .sidebar {
        position: fixed;
        top: 60px;
        left: -100%;
        width: 80%;
        max-width: 300px;
        height: calc(100vh - 60px);
        z-index: 90;
        transition: left var(--transition-speed) ease;
        box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        overflow-y: auto;
    }
    
    .sidebar.active {
        left: 0;
    }
    
    .name-box {
        display: none; /* Hide desktop name box on mobile */
    }
    
    .content {
        margin: 10px;
        background-color: var(--border-color); /* Ensure border is visible in mobile */
    }
    
    /* Overlay when menu is open */
    .overlay {
        display: none;
        position: fixed;
        top: 60px;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 80;
    }
    
    .overlay.active {
        display: block;
    }
    
    /* Animated hamburger to X */
    .menu-toggle.active .bar:nth-child(1) {
        transform: translateY(11px) rotate(45deg);
    }
    
    .menu-toggle.active .bar:nth-child(2) {
        opacity: 0;
    }
    
    .menu-toggle.active .bar:nth-child(3) {
        transform: translateY(-11px) rotate(-45deg);
    }
}

/* Blog Styles */
.blog-list {
    margin-top: 2rem;
}

.blog-post-preview {
    margin-bottom: 2.5rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--sidebar-border);
}

.blog-post-preview:last-child {
    border-bottom: none;
}

.blog-post-preview h3 {
    margin-bottom: 0.5rem;
}

.blog-post-preview h3::after {
    display: none;
}

.blog-post-preview h3 a {
    color: var(--text-color);
    text-decoration: none;
    transition: color 0.2s ease;
}

.blog-post-preview h3 a:hover {
    color: var(--accent);
}

.post-meta {
    font-size: 0.9rem;
    color: var(--border-color);
    margin-bottom: 1rem;
}

.post-summary {
    margin-bottom: 1rem;
    line-height: 1.6;
}

.read-more {
    display: inline-block;
    color: var(--accent);
    text-decoration: none;
    font-weight: 500;
    transition: opacity 0.2s ease;
}

.read-more:hover {
    opacity: 0.8;
}

/* Blog Post Page */
.post-metadata {
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--sidebar-border);
    font-size: 0.9rem;
    color: var(--border-color);
}

.post-content {
    line-height: 1.8;
    margin-bottom: 3rem;
}

.post-content h2,
.post-content h3,
.post-content h4 {
    margin-top: 2rem;
    margin-bottom: 1rem;
}

.post-content h2::after,
.post-content h3::after,
.post-content h4::after {
    display: none;
}

.post-content p,
.post-content ul,
.post-content ol {
    margin-bottom: 1.5rem;
}

.post-content a {
    color: var(--accent);
    text-decoration: none;
}

.post-content a:hover {
    text-decoration: underline;
}

.post-content blockquote {
    border-left: 4px solid var(--accent);
    padding-left: 1rem;
    margin-left: 0;
    color: var(--border-color);
}

.post-content img {
    max-width: 100%;
    height: auto;
    border-radius: 4px;
    margin: 1.5rem 0;
}

.post-content pre {
    background-color: var(--hover-bg);
    padding: 1rem;
    border-radius: 4px;
    overflow-x: auto;
    margin: 1.5rem 0;
}

.post-content code {
    font-family: monospace;
    font-size: 0.9em;
    background-color: var(--hover-bg);
    padding: 0.2rem 0.4rem;
    border-radius: 3px;
}

.post-content pre code {
    background-color: transparent;
    padding: 0;
}

.post-navigation {
    margin-top: 3rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--sidebar-border);
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.prev-next {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 1rem;
}

.prev-post,
.next-post,
.back-to-blog {
    color: var(--accent);
    text-decoration: none;
    transition: opacity 0.2s ease;
}

.prev-post:hover,
.next-post:hover,
.back-to-blog:hover {
    opacity: 0.8;
}

@media (max-width: 768px) {
    .prev-next {
        flex-direction: column;
    }
}

/* Shared Section Styles */
.section-header {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 40px;
    margin-bottom: 20px;
}

.section-info {
    display: flex;
    flex-direction: column;
    gap: 0px;
}

.section-title {
    margin-bottom: 0px !important;
    font-size: 1.8rem;
    font-weight: 600;
}

.section-title::after {
    display: none;
}

.section-subtitle {
    font-size: 1.5rem;
    font-style: italic;
    margin-bottom: 0px;
}

.section-date {
    font-size: 1.5rem;
    color: #888888;
    margin-bottom: 0px;
}

.section-description {
    margin: 20px 0;
    line-height: 1.6;
}

.section-accomplishments {
    margin-top: 20px;
    margin-bottom: 10px !important;
}

.section-accomplishments::after {
    display: none;
}

/* Experience specific overrides */
.experience-section {
    margin-bottom: 40px;
}

.company-logo {
    max-width: 500px;
    width: auto;
    height: auto;
}

.company-logo.smaller {
    max-width: 350px;
}

.logo-container {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgb(250 248 255);
    padding: 30px;
    /* Octagonal shape using clip-path */
    clip-path: polygon(
        var(--container-corner-cut) 0%, 
        calc(100% - var(--container-corner-cut)) 0%, 
        100% var(--container-corner-cut), 
        100% calc(100% - var(--container-corner-cut)), 
        calc(100% - var(--container-corner-cut)) 100%, 
        var(--container-corner-cut) 100%, 
        0% calc(100% - var(--container-corner-cut)), 
        0% var(--container-corner-cut)
    );
}

/* Portfolio specific overrides */
.portfolio-item {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    margin-bottom: 50px;
    gap: 30px;
}

.portfolio-info {
    flex: 1;
    min-width: 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
}

.portfolio-icon {
    width: 150px;
    height: 150px;
    object-fit: cover;
    /* Add octagonal clip-path to match containers */
    clip-path: polygon(
        var(--container-corner-cut) 0%, 
        calc(100% - var(--container-corner-cut)) 0%, 
        100% var(--container-corner-cut), 
        100% calc(100% - var(--container-corner-cut)), 
        calc(100% - var(--container-corner-cut)) 100%, 
        var(--container-corner-cut) 100%, 
        0% calc(100% - var(--container-corner-cut)), 
        0% var(--container-corner-cut)
    );
}

/* Responsive adjustments for shared sections */
@media (max-width: 768px) {
    .section-header {
        flex-direction: column;
        gap: 20px;
        text-align: center;
    }
    
    .company-logo {
        max-width: 300px;
    }
    
    .company-logo.smaller {
        max-width: 250px;
    }
    
    .logo-container {
        padding: 10px;
        /* Reduce corner clipping for mobile view */
        clip-path: polygon(
            calc(var(--container-corner-cut) * 0.7) 0%, 
            calc(100% - var(--container-corner-cut) * 0.7) 0%, 
            100% calc(var(--container-corner-cut) * 0.7), 
            100% calc(100% - var(--container-corner-cut) * 0.7), 
            calc(100% - var(--container-corner-cut) * 0.7) 100%, 
            calc(var(--container-corner-cut) * 0.7) 100%, 
            0% calc(100% - var(--container-corner-cut) * 0.7), 
            0% calc(var(--container-corner-cut) * 0.7)
        );
    }
    
    .section-title {
        font-size: 1.5rem;
    }
    
    .section-subtitle, 
    .section-date {
        font-size: 1.3rem;
    }
}

/* Portfolio Styles */
.portfolio-title-group {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.portfolio-title {
    margin-bottom: 0 !important;
    font-size: 1.8rem;
}

.portfolio-title::after {
    display: none;
}

.portfolio-date {
    font-size: 1.2rem;
    font-style: italic;
    color: var(--border-color);
}

.portfolio-description {
    line-height: 1.6;
}

.portfolio-link {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    padding: 8px 20px;
    background-color: var(--border-color);
    color: var(--text-color);
    text-decoration: none;
    font-weight: 500;
    transition: background-color var(--transition-speed);
    margin-top: 10px;
    cursor: pointer;
    height: 42px;
    line-height: 22px;
    border: none;
    z-index: 1;
    /* Hexagonal shape using clip-path */
    clip-path: polygon(var(--corner-cut) 0%, calc(100% - var(--corner-cut)) 0%, 100% 50%, calc(100% - var(--corner-cut)) 100%, var(--corner-cut) 100%, 0% 50%);
}

/* Pseudo-element for border effect with rounded corners */
.portfolio-link::before {
    content: '';
    position: absolute;
    top: var(--border-width);
    left: var(--border-width);
    right: var(--border-width);
    bottom: var(--border-width);
    background-color: var(--bg-color);
    z-index: -1;
    /* Calculate inset hexagonal shape */
    clip-path: polygon(
        calc(var(--corner-cut) - var(--border-width) * 0.5) 0%, 
        calc(100% - var(--corner-cut) + var(--border-width) * 0.5) 0%, 
        calc(100% - var(--border-width) * 0.5) 50%, 
        calc(100% - var(--corner-cut) + var(--border-width) * 0.5) 100%, 
        calc(var(--corner-cut) - var(--border-width) * 0.5) 100%, 
        calc(var(--border-width) * 0.5) 50%
    );
    transition: all var(--transition-speed);
}

/* Button gradient overlays */
.portfolio-link::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 2;
    pointer-events: none;
    transition: opacity var(--transition-speed);
    opacity: 1;
    /* Hexagonal shape using clip-path */
    clip-path: polygon(var(--corner-cut) 0%, calc(100% - var(--corner-cut)) 0%, 100% 50%, calc(100% - var(--corner-cut)) 100%, var(--corner-cut) 100%, 0% 50%);
    /* Gradient overlay, radiating from center */
    background: radial-gradient(
        circle at center,
        transparent 60%,
        var(--bg-color) 120%
    );
}

.portfolio-link:hover {
    background-color: var(--hover-border-color);
}

.portfolio-link:hover::after {
    opacity: 0;
}

.portfolio-link:hover::before {
    background-color: var(--hover-bg);
    top: var(--hover-border-width);
    left: var(--hover-border-width);
    right: var(--hover-border-width);
    bottom: var(--hover-border-width);
    /* Recalculate inset hexagonal shape for thicker border */
    clip-path: polygon(
        calc(var(--corner-cut) - var(--hover-border-width) * 0.5) 0%, 
        calc(100% - var(--corner-cut) + var(--hover-border-width) * 0.5) 0%, 
        calc(100% - var(--hover-border-width) * 0.5) 50%, 
        calc(100% - var(--corner-cut) + var(--hover-border-width) * 0.5) 100%, 
        calc(var(--corner-cut) - var(--hover-border-width) * 0.5) 100%, 
        calc(var(--hover-border-width) * 0.5) 50%
    );
}

.portfolio-link span {
    position: relative;
    z-index: 3;
    color: var(--text-color); /* Explicitly set the text color */
}

/* Fix for dark mode to ensure text visibility */
@media (prefers-color-scheme: dark) {
    .portfolio-link span {
        color: var(--text-color);
    }
    
    .portfolio-link:hover {
        color: var(--text-color);
    }
}

.portfolio-screenshots {
    flex: 1;
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
    justify-content: center;
}

.screenshot {
    height: 400px;
    width: auto;
    object-fit: contain;
}

/* About page styles */
.about-header {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 30px;
    margin-bottom: 30px;
}

.profile-picture {
    width: 250px;
    height: 250px;
    clip-path: polygon(
        var(--container-corner-cut) 0%, 
        calc(100% - var(--container-corner-cut)) 0%, 
        100% var(--container-corner-cut), 
        100% calc(100% - var(--container-corner-cut)), 
        calc(100% - var(--container-corner-cut)) 100%, 
        var(--container-corner-cut) 100%, 
        0% calc(100% - var(--container-corner-cut)), 
        0% var(--container-corner-cut)
    );
}

.about-header .profile-picture {
    flex-shrink: 0;
}

.about-header .text-content {
    flex: 1;
}

/* Make the hexagonal image container for screenshots */
.screenshot-container {
    position: relative;
    display: inline-block;
    overflow: hidden;
    clip-path: polygon(
        var(--container-corner-cut) 0%, 
        calc(100% - var(--container-corner-cut)) 0%, 
        100% var(--container-corner-cut), 
        100% calc(100% - var(--container-corner-cut)), 
        calc(100% - var(--container-corner-cut)) 100%, 
        var(--container-corner-cut) 100%, 
        0% calc(100% - var(--container-corner-cut)), 
        0% var(--container-corner-cut)
    );
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.screenshot-container:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
}

.screenshot-container img {
    display: block;
    height: 400px;
    width: auto;
    transition: transform 0.5s ease;
}

.screenshot-container:hover img {
    transform: scale(1.05);
}

/* Responsive adjustments for portfolio */
@media (max-width: 992px) {
    .portfolio-item {
        flex-direction: column;
    }
    
    .portfolio-header {
        flex-direction: column;
        justify-content: center;
        gap: 15px;
    }
    
    .portfolio-icon {
        width: 100px;
        height: 100px;
        /* Reduce corner clipping for tablet view */
        clip-path: polygon(
            calc(var(--container-corner-cut) * 0.7) 0%, 
            calc(100% - var(--container-corner-cut) * 0.7) 0%, 
            100% calc(var(--container-corner-cut) * 0.7), 
            100% calc(100% - var(--container-corner-cut) * 0.7), 
            calc(100% - var(--container-corner-cut) * 0.7) 100%, 
            calc(var(--container-corner-cut) * 0.7) 100%, 
            0% calc(100% - var(--container-corner-cut) * 0.7), 
            0% calc(var(--container-corner-cut) * 0.7)
        );
    }
    
    .portfolio-title-group {
        align-items: center;
        text-align: center;
    }
    
    .portfolio-description {
        text-align: center;
    }
    
    .screenshot-container {
        /* Reduce corner clipping for tablet view */
        clip-path: polygon(
            calc(var(--container-corner-cut) * 0.7) 0%, 
            calc(100% - var(--container-corner-cut) * 0.7) 0%, 
            100% calc(var(--container-corner-cut) * 0.7), 
            100% calc(100% - var(--container-corner-cut) * 0.7), 
            calc(100% - var(--container-corner-cut) * 0.7) 100%, 
            calc(var(--container-corner-cut) * 0.7) 100%, 
            0% calc(100% - var(--container-corner-cut) * 0.7), 
            0% calc(var(--container-corner-cut) * 0.7)
        );
    }
    
    .screenshot-container img {
        height: 350px;
    }
    
    .third-screenshot {
        display: none;
    }
    
    .profile-picture {
        width: 250px;
        height: 250px;
        /* Reduce corner clipping for tablet view */
        clip-path: polygon(
            calc(var(--container-corner-cut) * 0.7) 0%, 
            calc(100% - var(--container-corner-cut) * 0.7) 0%, 
            100% calc(var(--container-corner-cut) * 0.7), 
            100% calc(100% - var(--container-corner-cut) * 0.7), 
            calc(100% - var(--container-corner-cut) * 0.7) 100%, 
            calc(var(--container-corner-cut) * 0.7) 100%, 
            0% calc(100% - var(--container-corner-cut) * 0.7), 
            0% calc(var(--container-corner-cut) * 0.7)
        );
    }
}

@media (max-width: 768px) {
    /* About page responsive adjustments */
    .about-header {
        flex-direction: column;
        align-items: center;
        text-align: center;
        gap: 20px;
    }
    
    .about-header .text-content {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    
    .about-header .text-content h1::after,
    .about-header .text-content h2::after,
    .about-header .text-content h3::after {
        left: 50%;
        transform: translateX(-50%);
    }
    
    .profile-picture {
        width: 200px;
        height: 200px;
    }
}

@media (max-width: 576px) {
    .portfolio-header {
        padding: 0 10px;
    }
    
    .portfolio-icon {
        width: 80px;
        height: 80px;
        /* Reduce corner clipping further for mobile view */
        clip-path: polygon(
            calc(var(--container-corner-cut) * 0.5) 0%, 
            calc(100% - var(--container-corner-cut) * 0.5) 0%, 
            100% calc(var(--container-corner-cut) * 0.5), 
            100% calc(100% - var(--container-corner-cut) * 0.5), 
            calc(100% - var(--container-corner-cut) * 0.5) 100%, 
            calc(var(--container-corner-cut) * 0.5) 100%, 
            0% calc(100% - var(--container-corner-cut) * 0.5), 
            0% calc(var(--container-corner-cut) * 0.5)
        );
    }
    
    .screenshot-container {
        /* Reduce corner clipping further for mobile view */
        clip-path: polygon(
            calc(var(--container-corner-cut) * 0.5) 0%, 
            calc(100% - var(--container-corner-cut) * 0.5) 0%, 
            100% calc(var(--container-corner-cut) * 0.5), 
            100% calc(100% - var(--container-corner-cut) * 0.5), 
            calc(100% - var(--container-corner-cut) * 0.5) 100%, 
            calc(var(--container-corner-cut) * 0.5) 100%, 
            0% calc(100% - var(--container-corner-cut) * 0.5), 
            0% calc(var(--container-corner-cut) * 0.5)
        );
    }
    
    .portfolio-title {
        font-size: 1.6rem;
    }
    
    .portfolio-date {
        font-size: 1rem;
    }
    
    .portfolio-link {
        padding: 6px 16px;
        height: 36px;
        line-height: 20px;
        font-size: 0.9rem;
    }
    
    .portfolio-link-icon {
        width: 16px;
        height: 16px;
    }
    
    .portfolio-description {
        padding: 0 10px;
    }
    
    .screenshot-container img {
        height: 300px;
    }
    
    .profile-picture {
        width: 150px;
        height: 150px;
        /* Reduce corner clipping further for mobile view */
        clip-path: polygon(
            calc(var(--container-corner-cut) * 0.5) 0%, 
            calc(100% - var(--container-corner-cut) * 0.5) 0%, 
            100% calc(var(--container-corner-cut) * 0.5), 
            100% calc(100% - var(--container-corner-cut) * 0.5), 
            calc(100% - var(--container-corner-cut) * 0.5) 100%, 
            calc(var(--container-corner-cut) * 0.5) 100%, 
            0% calc(100% - var(--container-corner-cut) * 0.5), 
            0% calc(var(--container-corner-cut) * 0.5)
        );
    }
}